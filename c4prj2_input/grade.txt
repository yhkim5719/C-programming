Grading at Fri Aug  2 23:43:30 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Line_1_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Line_1_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==4238== Memcheck, a memory error detector
==4238== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4238== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4238== Command: ./tester h.txt d.txt
==4238== Parent PID: 4237
==4238== 
==4238== Invalid write of size 1
==4238==    at 0x400BAA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4238==    by 0x400D82: read_input (in /graderhome/work/c4prj2_input/tester)
==4238==    by 0x401CE4: main (test-input.c:69)
==4238==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==4238== 
==4238== 
==4238== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==4238==  Access not within mapped region at address 0x0
==4238==    at 0x400BAA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4238==    by 0x400D82: read_input (in /graderhome/work/c4prj2_input/tester)
==4238==    by 0x401CE4: main (test-input.c:69)
==4238==  If you believe this happened as a result of a stack
==4238==  overflow in your program's main thread (unlikely but
==4238==  possible), you can try to increase the size of the
==4238==  main thread stack using the --main-stacksize= flag.
==4238==  The main thread stack size used in this run was 8388608.
==4238== 
==4238== HEAP SUMMARY:
==4238==     in use at exit: 808 bytes in 12 blocks
==4238==   total heap usage: 18 allocs, 6 frees, 5,024 bytes allocated
==4238== 
==4238== LEAK SUMMARY:
==4238==    definitely lost: 0 bytes in 0 blocks
==4238==    indirectly lost: 0 bytes in 0 blocks
==4238==      possibly lost: 0 bytes in 0 blocks
==4238==    still reachable: 808 bytes in 12 blocks
==4238==         suppressed: 0 bytes in 0 blocks
==4238== Rerun with --leak-check=full to see details of leaked memory
==4238== 
==4238== For counts of detected and suppressed errors, rerun with: -v
==4238== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==4244== Memcheck, a memory error detector
==4244== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4244== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4244== Command: ./tester i1 i2
==4244== Parent PID: 4243
==4244== 
==4244== Invalid write of size 1
==4244==    at 0x400BAA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4244==    by 0x400D82: read_input (in /graderhome/work/c4prj2_input/tester)
==4244==    by 0x401CE4: main (test-input.c:69)
==4244==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==4244== 
==4244== 
==4244== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==4244==  Access not within mapped region at address 0x0
==4244==    at 0x400BAA: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4244==    by 0x400D82: read_input (in /graderhome/work/c4prj2_input/tester)
==4244==    by 0x401CE4: main (test-input.c:69)
==4244==  If you believe this happened as a result of a stack
==4244==  overflow in your program's main thread (unlikely but
==4244==  possible), you can try to increase the size of the
==4244==  main thread stack using the --main-stacksize= flag.
==4244==  The main thread stack size used in this run was 8388608.
==4244== 
==4244== HEAP SUMMARY:
==4244==     in use at exit: 760 bytes in 9 blocks
==4244==   total heap usage: 12 allocs, 3 frees, 4,880 bytes allocated
==4244== 
==4244== LEAK SUMMARY:
==4244==    definitely lost: 0 bytes in 0 blocks
==4244==    indirectly lost: 0 bytes in 0 blocks
==4244==      possibly lost: 0 bytes in 0 blocks
==4244==    still reachable: 760 bytes in 9 blocks
==4244==         suppressed: 0 bytes in 0 blocks
==4244== Rerun with --leak-check=full to see details of leaked memory
==4244== 
==4244== For counts of detected and suppressed errors, rerun with: -v
==4244== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
