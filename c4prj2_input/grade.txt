Grading at Fri Aug  2 23:03:56 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1601== Memcheck, a memory error detector
==1601== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1601== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1601== Command: ./tester hands.txt draw.txt
==1601== Parent PID: 1600
==1601== 
==1601== Invalid read of size 8
==1601==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x401BEA: main (test-input.c:69)
==1601==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1601== 
==1601== 
==1601== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1601==  Access not within mapped region at address 0x8
==1601==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1601==    by 0x401BEA: main (test-input.c:69)
==1601==  If you believe this happened as a result of a stack
==1601==  overflow in your program's main thread (unlikely but
==1601==  possible), you can try to increase the size of the
==1601==  main thread stack using the --main-stacksize= flag.
==1601==  The main thread stack size used in this run was 8388608.
==1601== 
==1601== HEAP SUMMARY:
==1601==     in use at exit: 696 bytes in 4 blocks
==1601==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1601== 
==1601== LEAK SUMMARY:
==1601==    definitely lost: 0 bytes in 0 blocks
==1601==    indirectly lost: 0 bytes in 0 blocks
==1601==      possibly lost: 0 bytes in 0 blocks
==1601==    still reachable: 696 bytes in 4 blocks
==1601==         suppressed: 0 bytes in 0 blocks
==1601== Rerun with --leak-check=full to see details of leaked memory
==1601== 
==1601== For counts of detected and suppressed errors, rerun with: -v
==1601== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1606== Memcheck, a memory error detector
==1606== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1606== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1606== Command: ./tester hands.txt draw.txt
==1606== Parent PID: 1605
==1606== 
==1606== Invalid read of size 8
==1606==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x401BEA: main (test-input.c:69)
==1606==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1606== 
==1606== 
==1606== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1606==  Access not within mapped region at address 0x8
==1606==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1606==    by 0x401BEA: main (test-input.c:69)
==1606==  If you believe this happened as a result of a stack
==1606==  overflow in your program's main thread (unlikely but
==1606==  possible), you can try to increase the size of the
==1606==  main thread stack using the --main-stacksize= flag.
==1606==  The main thread stack size used in this run was 8388608.
==1606== 
==1606== HEAP SUMMARY:
==1606==     in use at exit: 696 bytes in 4 blocks
==1606==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1606== 
==1606== LEAK SUMMARY:
==1606==    definitely lost: 0 bytes in 0 blocks
==1606==    indirectly lost: 0 bytes in 0 blocks
==1606==      possibly lost: 0 bytes in 0 blocks
==1606==    still reachable: 696 bytes in 4 blocks
==1606==         suppressed: 0 bytes in 0 blocks
==1606== Rerun with --leak-check=full to see details of leaked memory
==1606== 
==1606== For counts of detected and suppressed errors, rerun with: -v
==1606== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1612== Memcheck, a memory error detector
==1612== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1612== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1612== Command: ./tester h.txt d.txt
==1612== Parent PID: 1611
==1612== 
==1612== Invalid read of size 8
==1612==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x401BEA: main (test-input.c:69)
==1612==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1612== 
==1612== 
==1612== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1612==  Access not within mapped region at address 0x8
==1612==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1612==    by 0x401BEA: main (test-input.c:69)
==1612==  If you believe this happened as a result of a stack
==1612==  overflow in your program's main thread (unlikely but
==1612==  possible), you can try to increase the size of the
==1612==  main thread stack using the --main-stacksize= flag.
==1612==  The main thread stack size used in this run was 8388608.
==1612== 
==1612== HEAP SUMMARY:
==1612==     in use at exit: 696 bytes in 4 blocks
==1612==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1612== 
==1612== LEAK SUMMARY:
==1612==    definitely lost: 0 bytes in 0 blocks
==1612==    indirectly lost: 0 bytes in 0 blocks
==1612==      possibly lost: 0 bytes in 0 blocks
==1612==    still reachable: 696 bytes in 4 blocks
==1612==         suppressed: 0 bytes in 0 blocks
==1612== Rerun with --leak-check=full to see details of leaked memory
==1612== 
==1612== For counts of detected and suppressed errors, rerun with: -v
==1612== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1618== Memcheck, a memory error detector
==1618== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1618== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1618== Command: ./tester i1 i2
==1618== Parent PID: 1617
==1618== 
==1618== Invalid read of size 8
==1618==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x401BEA: main (test-input.c:69)
==1618==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1618== 
==1618== 
==1618== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1618==  Access not within mapped region at address 0x8
==1618==    at 0x40120F: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x400CDA: read_input (in /graderhome/work/c4prj2_input/tester)
==1618==    by 0x401BEA: main (test-input.c:69)
==1618==  If you believe this happened as a result of a stack
==1618==  overflow in your program's main thread (unlikely but
==1618==  possible), you can try to increase the size of the
==1618==  main thread stack using the --main-stacksize= flag.
==1618==  The main thread stack size used in this run was 8388608.
==1618== 
==1618== HEAP SUMMARY:
==1618==     in use at exit: 696 bytes in 4 blocks
==1618==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1618== 
==1618== LEAK SUMMARY:
==1618==    definitely lost: 0 bytes in 0 blocks
==1618==    indirectly lost: 0 bytes in 0 blocks
==1618==      possibly lost: 0 bytes in 0 blocks
==1618==    still reachable: 696 bytes in 4 blocks
==1618==         suppressed: 0 bytes in 0 blocks
==1618== Rerun with --leak-check=full to see details of leaked memory
==1618== 
==1618== For counts of detected and suppressed errors, rerun with: -v
==1618== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
