Grading at Sat Aug  3 01:31:26 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==11308== Memcheck, a memory error detector
==11308== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11308== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11308== Command: ./tester h.txt d.txt
==11308== Parent PID: 11307
==11308== 
==11308== Invalid read of size 8
==11308==    at 0x401161: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x401F28: main (test-input.c:81)
==11308==  Address 0x52059e8 is 0 bytes after a block of size 8 alloc'd
==11308==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11308==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11308==    by 0x401070: add_future_card (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x400CC6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x400E33: read_input (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x401E4E: main (test-input.c:69)
==11308== 
==11308== Invalid write of size 4
==11308==    at 0x40117D: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x401F28: main (test-input.c:81)
==11308==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11308== 
==11308== 
==11308== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==11308==  Access not within mapped region at address 0x0
==11308==    at 0x40117D: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11308==    by 0x401F28: main (test-input.c:81)
==11308==  If you believe this happened as a result of a stack
==11308==  overflow in your program's main thread (unlikely but
==11308==  possible), you can try to increase the size of the
==11308==  main thread stack using the --main-stacksize= flag.
==11308==  The main thread stack size used in this run was 8388608.
==11308== 
==11308== HEAP SUMMARY:
==11308==     in use at exit: 1,024 bytes in 71 blocks
==11308==   total heap usage: 123 allocs, 52 frees, 15,712 bytes allocated
==11308== 
==11308== LEAK SUMMARY:
==11308==    definitely lost: 0 bytes in 0 blocks
==11308==    indirectly lost: 0 bytes in 0 blocks
==11308==      possibly lost: 0 bytes in 0 blocks
==11308==    still reachable: 1,024 bytes in 71 blocks
==11308==         suppressed: 0 bytes in 0 blocks
==11308== Rerun with --leak-check=full to see details of leaked memory
==11308== 
==11308== For counts of detected and suppressed errors, rerun with: -v
==11308== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==11314== Memcheck, a memory error detector
==11314== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11314== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11314== Command: ./tester i1 i2
==11314== Parent PID: 11313
==11314== 
==11314== Invalid read of size 8
==11314==    at 0x401161: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x401F28: main (test-input.c:81)
==11314==  Address 0x5207d60 is 0 bytes after a block of size 32 alloc'd
==11314==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==11314==    by 0x400F2C: add_future_card (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x400CC6: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x400E33: read_input (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x401E4E: main (test-input.c:69)
==11314== 
==11314== Invalid write of size 4
==11314==    at 0x40117D: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x401F28: main (test-input.c:81)
==11314==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==11314== 
==11314== 
==11314== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==11314==  Access not within mapped region at address 0x0
==11314==    at 0x40117D: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==11314==    by 0x401F28: main (test-input.c:81)
==11314==  If you believe this happened as a result of a stack
==11314==  overflow in your program's main thread (unlikely but
==11314==  possible), you can try to increase the size of the
==11314==  main thread stack using the --main-stacksize= flag.
==11314==  The main thread stack size used in this run was 8388608.
==11314== 
==11314== HEAP SUMMARY:
==11314==     in use at exit: 2,768 bytes in 182 blocks
==11314==   total heap usage: 329 allocs, 147 frees, 22,120 bytes allocated
==11314== 
==11314== LEAK SUMMARY:
==11314==    definitely lost: 0 bytes in 0 blocks
==11314==    indirectly lost: 0 bytes in 0 blocks
==11314==      possibly lost: 0 bytes in 0 blocks
==11314==    still reachable: 2,768 bytes in 182 blocks
==11314==         suppressed: 0 bytes in 0 blocks
==11314== Rerun with --leak-check=full to see details of leaked memory
==11314== 
==11314== For counts of detected and suppressed errors, rerun with: -v
==11314== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
