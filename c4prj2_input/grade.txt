Grading at Fri Aug  2 23:12:12 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==1897== Memcheck, a memory error detector
==1897== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1897== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1897== Command: ./tester hands.txt draw.txt
==1897== Parent PID: 1896
==1897== 
==1897== Invalid read of size 8
==1897==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x401C25: main (test-input.c:69)
==1897==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1897== 
==1897== 
==1897== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1897==  Access not within mapped region at address 0x8
==1897==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1897==    by 0x401C25: main (test-input.c:69)
==1897==  If you believe this happened as a result of a stack
==1897==  overflow in your program's main thread (unlikely but
==1897==  possible), you can try to increase the size of the
==1897==  main thread stack using the --main-stacksize= flag.
==1897==  The main thread stack size used in this run was 8388608.
==1897== 
==1897== HEAP SUMMARY:
==1897==     in use at exit: 696 bytes in 4 blocks
==1897==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1897== 
==1897== LEAK SUMMARY:
==1897==    definitely lost: 0 bytes in 0 blocks
==1897==    indirectly lost: 0 bytes in 0 blocks
==1897==      possibly lost: 0 bytes in 0 blocks
==1897==    still reachable: 696 bytes in 4 blocks
==1897==         suppressed: 0 bytes in 0 blocks
==1897== Rerun with --leak-check=full to see details of leaked memory
==1897== 
==1897== For counts of detected and suppressed errors, rerun with: -v
==1897== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==1902== Memcheck, a memory error detector
==1902== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1902== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1902== Command: ./tester hands.txt draw.txt
==1902== Parent PID: 1901
==1902== 
==1902== Invalid read of size 8
==1902==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x401C25: main (test-input.c:69)
==1902==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1902== 
==1902== 
==1902== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1902==  Access not within mapped region at address 0x8
==1902==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1902==    by 0x401C25: main (test-input.c:69)
==1902==  If you believe this happened as a result of a stack
==1902==  overflow in your program's main thread (unlikely but
==1902==  possible), you can try to increase the size of the
==1902==  main thread stack using the --main-stacksize= flag.
==1902==  The main thread stack size used in this run was 8388608.
==1902== 
==1902== HEAP SUMMARY:
==1902==     in use at exit: 696 bytes in 4 blocks
==1902==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1902== 
==1902== LEAK SUMMARY:
==1902==    definitely lost: 0 bytes in 0 blocks
==1902==    indirectly lost: 0 bytes in 0 blocks
==1902==      possibly lost: 0 bytes in 0 blocks
==1902==    still reachable: 696 bytes in 4 blocks
==1902==         suppressed: 0 bytes in 0 blocks
==1902== Rerun with --leak-check=full to see details of leaked memory
==1902== 
==1902== For counts of detected and suppressed errors, rerun with: -v
==1902== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1908== Memcheck, a memory error detector
==1908== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1908== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1908== Command: ./tester h.txt d.txt
==1908== Parent PID: 1907
==1908== 
==1908== Invalid read of size 8
==1908==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x401C25: main (test-input.c:69)
==1908==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1908== 
==1908== 
==1908== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1908==  Access not within mapped region at address 0x8
==1908==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1908==    by 0x401C25: main (test-input.c:69)
==1908==  If you believe this happened as a result of a stack
==1908==  overflow in your program's main thread (unlikely but
==1908==  possible), you can try to increase the size of the
==1908==  main thread stack using the --main-stacksize= flag.
==1908==  The main thread stack size used in this run was 8388608.
==1908== 
==1908== HEAP SUMMARY:
==1908==     in use at exit: 696 bytes in 4 blocks
==1908==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1908== 
==1908== LEAK SUMMARY:
==1908==    definitely lost: 0 bytes in 0 blocks
==1908==    indirectly lost: 0 bytes in 0 blocks
==1908==      possibly lost: 0 bytes in 0 blocks
==1908==    still reachable: 696 bytes in 4 blocks
==1908==         suppressed: 0 bytes in 0 blocks
==1908== Rerun with --leak-check=full to see details of leaked memory
==1908== 
==1908== For counts of detected and suppressed errors, rerun with: -v
==1908== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1914== Memcheck, a memory error detector
==1914== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1914== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1914== Command: ./tester i1 i2
==1914== Parent PID: 1913
==1914== 
==1914== Invalid read of size 8
==1914==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x401C25: main (test-input.c:69)
==1914==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1914== 
==1914== 
==1914== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1914==  Access not within mapped region at address 0x8
==1914==    at 0x40124A: add_card_to (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x400BC7: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x400CE5: read_input (in /graderhome/work/c4prj2_input/tester)
==1914==    by 0x401C25: main (test-input.c:69)
==1914==  If you believe this happened as a result of a stack
==1914==  overflow in your program's main thread (unlikely but
==1914==  possible), you can try to increase the size of the
==1914==  main thread stack using the --main-stacksize= flag.
==1914==  The main thread stack size used in this run was 8388608.
==1914== 
==1914== HEAP SUMMARY:
==1914==     in use at exit: 696 bytes in 4 blocks
==1914==   total heap usage: 5 allocs, 1 frees, 4,792 bytes allocated
==1914== 
==1914== LEAK SUMMARY:
==1914==    definitely lost: 0 bytes in 0 blocks
==1914==    indirectly lost: 0 bytes in 0 blocks
==1914==      possibly lost: 0 bytes in 0 blocks
==1914==    still reachable: 696 bytes in 4 blocks
==1914==         suppressed: 0 bytes in 0 blocks
==1914== Rerun with --leak-check=full to see details of leaked memory
==1914== 
==1914== For counts of detected and suppressed errors, rerun with: -v
==1914== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
