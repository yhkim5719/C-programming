Grading at Sat Aug  3 07:43:27 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==5455== Memcheck, a memory error detector
==5455== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==5455== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5455== Command: ./tester h.txt d.txt
==5455== Parent PID: 5454
==5455== 
==5455== Invalid write of size 8
==5455==    at 0x400F78: add_future_card (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x401CBA: main (test-input.c:69)
==5455==  Address 0x52059d8 is 8 bytes before a block of size 16 alloc'd
==5455==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5455==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5455==    by 0x400F3A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x401CBA: main (test-input.c:69)
==5455== 
==5455== Use of uninitialised value of size 8
==5455==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x401D94: main (test-input.c:81)
==5455== 
==5455== Invalid write of size 4
==5455==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x401D94: main (test-input.c:81)
==5455==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==5455== 
==5455== 
==5455== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==5455==  Access not within mapped region at address 0x0
==5455==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5455==    by 0x401D94: main (test-input.c:81)
==5455==  If you believe this happened as a result of a stack
==5455==  overflow in your program's main thread (unlikely but
==5455==  possible), you can try to increase the size of the
==5455==  main thread stack using the --main-stacksize= flag.
==5455==  The main thread stack size used in this run was 8388608.
==5455== 
==5455== HEAP SUMMARY:
==5455==     in use at exit: 1,056 bytes in 71 blocks
==5455==   total heap usage: 123 allocs, 52 frees, 15,744 bytes allocated
==5455== 
==5455== LEAK SUMMARY:
==5455==    definitely lost: 32 bytes in 4 blocks
==5455==    indirectly lost: 0 bytes in 0 blocks
==5455==      possibly lost: 0 bytes in 0 blocks
==5455==    still reachable: 1,024 bytes in 67 blocks
==5455==         suppressed: 0 bytes in 0 blocks
==5455== Rerun with --leak-check=full to see details of leaked memory
==5455== 
==5455== For counts of detected and suppressed errors, rerun with: -v
==5455== Use --track-origins=yes to see where uninitialised values come from
==5455== ERROR SUMMARY: 6 errors from 3 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==5461== Memcheck, a memory error detector
==5461== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==5461== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5461== Command: ./tester i1 i2
==5461== Parent PID: 5460
==5461== 
==5461== Invalid write of size 8
==5461==    at 0x400F78: add_future_card (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x401CBA: main (test-input.c:69)
==5461==  Address 0x5205788 is 8 bytes before a block of size 16 alloc'd
==5461==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5461==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5461==    by 0x400F3A: add_future_card (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x401CBA: main (test-input.c:69)
==5461== 
==5461== Use of uninitialised value of size 8
==5461==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x401D94: main (test-input.c:81)
==5461== 
==5461== Invalid write of size 4
==5461==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x401D94: main (test-input.c:81)
==5461==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==5461== 
==5461== 
==5461== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==5461==  Access not within mapped region at address 0x0
==5461==    at 0x40104E: future_cards_from_deck (in /graderhome/work/c4prj2_input/tester)
==5461==    by 0x401D94: main (test-input.c:81)
==5461==  If you believe this happened as a result of a stack
==5461==  overflow in your program's main thread (unlikely but
==5461==  possible), you can try to increase the size of the
==5461==  main thread stack using the --main-stacksize= flag.
==5461==  The main thread stack size used in this run was 8388608.
==5461== 
==5461== HEAP SUMMARY:
==5461==     in use at exit: 3,000 bytes in 182 blocks
==5461==   total heap usage: 329 allocs, 147 frees, 22,600 bytes allocated
==5461== 
==5461== LEAK SUMMARY:
==5461==    definitely lost: 96 bytes in 12 blocks
==5461==    indirectly lost: 0 bytes in 0 blocks
==5461==      possibly lost: 0 bytes in 0 blocks
==5461==    still reachable: 2,904 bytes in 170 blocks
==5461==         suppressed: 0 bytes in 0 blocks
==5461== Rerun with --leak-check=full to see details of leaked memory
==5461== 
==5461== For counts of detected and suppressed errors, rerun with: -v
==5461== Use --track-origins=yes to see where uninitialised values come from
==5461== ERROR SUMMARY: 14 errors from 3 contexts (suppressed: 0 from 0)

Overall Grade: C
