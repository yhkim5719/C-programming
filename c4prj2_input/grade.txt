Grading at Sat Aug  3 07:38:34 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==4955== Memcheck, a memory error detector
==4955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4955== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4955== Command: ./tester h.txt d.txt
==4955== Parent PID: 4954
==4955== 
==4955== Invalid read of size 8
==4955==    at 0x400F10: add_future_card (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x401CBA: main (test-input.c:69)
==4955==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==4955== 
==4955== 
==4955== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==4955==  Access not within mapped region at address 0x8
==4955==    at 0x400F10: add_future_card (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==4955==    by 0x401CBA: main (test-input.c:69)
==4955==  If you believe this happened as a result of a stack
==4955==  overflow in your program's main thread (unlikely but
==4955==  possible), you can try to increase the size of the
==4955==  main thread stack using the --main-stacksize= flag.
==4955==  The main thread stack size used in this run was 8388608.
==4955== 
==4955== HEAP SUMMARY:
==4955==     in use at exit: 816 bytes in 13 blocks
==4955==   total heap usage: 20 allocs, 7 frees, 5,080 bytes allocated
==4955== 
==4955== LEAK SUMMARY:
==4955==    definitely lost: 0 bytes in 0 blocks
==4955==    indirectly lost: 0 bytes in 0 blocks
==4955==      possibly lost: 0 bytes in 0 blocks
==4955==    still reachable: 816 bytes in 13 blocks
==4955==         suppressed: 0 bytes in 0 blocks
==4955== Rerun with --leak-check=full to see details of leaked memory
==4955== 
==4955== For counts of detected and suppressed errors, rerun with: -v
==4955== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==4961== Memcheck, a memory error detector
==4961== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4961== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4961== Command: ./tester i1 i2
==4961== Parent PID: 4960
==4961== 
==4961== Invalid read of size 8
==4961==    at 0x400F10: add_future_card (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x401CBA: main (test-input.c:69)
==4961==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==4961== 
==4961== 
==4961== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==4961==  Access not within mapped region at address 0x8
==4961==    at 0x400F10: add_future_card (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x400C68: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x400DBC: read_input (in /graderhome/work/c4prj2_input/tester)
==4961==    by 0x401CBA: main (test-input.c:69)
==4961==  If you believe this happened as a result of a stack
==4961==  overflow in your program's main thread (unlikely but
==4961==  possible), you can try to increase the size of the
==4961==  main thread stack using the --main-stacksize= flag.
==4961==  The main thread stack size used in this run was 8388608.
==4961== 
==4961== HEAP SUMMARY:
==4961==     in use at exit: 768 bytes in 10 blocks
==4961==   total heap usage: 14 allocs, 4 frees, 4,912 bytes allocated
==4961== 
==4961== LEAK SUMMARY:
==4961==    definitely lost: 0 bytes in 0 blocks
==4961==    indirectly lost: 0 bytes in 0 blocks
==4961==      possibly lost: 0 bytes in 0 blocks
==4961==    still reachable: 768 bytes in 10 blocks
==4961==         suppressed: 0 bytes in 0 blocks
==4961== Rerun with --leak-check=full to see details of leaked memory
==4961== 
==4961== For counts of detected and suppressed errors, rerun with: -v
==4961== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
