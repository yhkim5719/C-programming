Grading at Thu Aug  8 19:40:12 UTC 2019
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Valgrind reported errors:
==440== Memcheck, a memory error detector
==440== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==440== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==440== Command: ./tester hands.txt draw.txt
==440== Parent PID: 439
==440== 
==440== Invalid read of size 8
==440==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==440==    by 0x401CB9: main (test-input.c:84)
==440==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==440== 
==440== 
==440== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==440==  Access not within mapped region at address 0x8
==440==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==440==    by 0x401CB9: main (test-input.c:84)
==440==  If you believe this happened as a result of a stack
==440==  overflow in your program's main thread (unlikely but
==440==  possible), you can try to increase the size of the
==440==  main thread stack using the --main-stacksize= flag.
==440==  The main thread stack size used in this run was 8388608.
==440== 
==440== HEAP SUMMARY:
==440==     in use at exit: 64 bytes in 6 blocks
==440==   total heap usage: 13 allocs, 7 frees, 13,696 bytes allocated
==440== 
==440== LEAK SUMMARY:
==440==    definitely lost: 16 bytes in 1 blocks
==440==    indirectly lost: 0 bytes in 0 blocks
==440==      possibly lost: 0 bytes in 0 blocks
==440==    still reachable: 48 bytes in 5 blocks
==440==         suppressed: 0 bytes in 0 blocks
==440== Rerun with --leak-check=full to see details of leaked memory
==440== 
==440== For counts of detected and suppressed errors, rerun with: -v
==440== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o No unknown/future cards
Valgrind reported errors:
==445== Memcheck, a memory error detector
==445== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==445== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==445== Command: ./tester hands.txt draw.txt
==445== Parent PID: 444
==445== 
==445== Invalid read of size 8
==445==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==445==    by 0x401CB9: main (test-input.c:84)
==445==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==445== 
==445== 
==445== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==445==  Access not within mapped region at address 0x8
==445==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==445==    by 0x401CB9: main (test-input.c:84)
==445==  If you believe this happened as a result of a stack
==445==  overflow in your program's main thread (unlikely but
==445==  possible), you can try to increase the size of the
==445==  main thread stack using the --main-stacksize= flag.
==445==  The main thread stack size used in this run was 8388608.
==445== 
==445== HEAP SUMMARY:
==445==     in use at exit: 136 bytes in 9 blocks
==445==   total heap usage: 19 allocs, 10 frees, 13,816 bytes allocated
==445== 
==445== LEAK SUMMARY:
==445==    definitely lost: 64 bytes in 4 blocks
==445==    indirectly lost: 0 bytes in 0 blocks
==445==      possibly lost: 0 bytes in 0 blocks
==445==    still reachable: 72 bytes in 5 blocks
==445==         suppressed: 0 bytes in 0 blocks
==445== Rerun with --leak-check=full to see details of leaked memory
==445== 
==445== For counts of detected and suppressed errors, rerun with: -v
==445== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==451== Memcheck, a memory error detector
==451== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==451== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==451== Command: ./tester h.txt d.txt
==451== Parent PID: 450
==451== 
==451== Invalid read of size 8
==451==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==451==    by 0x401CB9: main (test-input.c:84)
==451==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==451== 
==451== 
==451== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==451==  Access not within mapped region at address 0x8
==451==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==451==    by 0x401CB9: main (test-input.c:84)
==451==  If you believe this happened as a result of a stack
==451==  overflow in your program's main thread (unlikely but
==451==  possible), you can try to increase the size of the
==451==  main thread stack using the --main-stacksize= flag.
==451==  The main thread stack size used in this run was 8388608.
==451== 
==451== HEAP SUMMARY:
==451==     in use at exit: 448 bytes in 30 blocks
==451==   total heap usage: 55 allocs, 25 frees, 14,368 bytes allocated
==451== 
==451== LEAK SUMMARY:
==451==    definitely lost: 64 bytes in 4 blocks
==451==    indirectly lost: 0 bytes in 0 blocks
==451==      possibly lost: 0 bytes in 0 blocks
==451==    still reachable: 384 bytes in 26 blocks
==451==         suppressed: 0 bytes in 0 blocks
==451== Rerun with --leak-check=full to see details of leaked memory
==451== 
==451== For counts of detected and suppressed errors, rerun with: -v
==451== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==457== Memcheck, a memory error detector
==457== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==457== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==457== Command: ./tester i1 i2
==457== Parent PID: 456
==457== 
==457== Invalid read of size 8
==457==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==457==    by 0x401CB9: main (test-input.c:84)
==457==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==457== 
==457== 
==457== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==457==  Access not within mapped region at address 0x8
==457==    at 0x40102E: print_hand (in /graderhome/work/c4prj2_input/tester)
==457==    by 0x401CB9: main (test-input.c:84)
==457==  If you believe this happened as a result of a stack
==457==  overflow in your program's main thread (unlikely but
==457==  possible), you can try to increase the size of the
==457==  main thread stack using the --main-stacksize= flag.
==457==  The main thread stack size used in this run was 8388608.
==457== 
==457== HEAP SUMMARY:
==457==     in use at exit: 1,440 bytes in 92 blocks
==457==   total heap usage: 175 allocs, 83 frees, 18,480 bytes allocated
==457== 
==457== LEAK SUMMARY:
==457==    definitely lost: 96 bytes in 6 blocks
==457==    indirectly lost: 0 bytes in 0 blocks
==457==      possibly lost: 0 bytes in 0 blocks
==457==    still reachable: 1,344 bytes in 86 blocks
==457==         suppressed: 0 bytes in 0 blocks
==457== Rerun with --leak-check=full to see details of leaked memory
==457== 
==457== For counts of detected and suppressed errors, rerun with: -v
==457== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: F
