Grading at Mon Aug 12 04:56:55 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1923== Memcheck, a memory error detector
==1923== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1923== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1923== Command: ./tester act
==1923== Parent PID: 1922
==1923== 
==1923== Invalid read of size 8
==1923==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1923==    by 0x4041F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1923==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1923==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1923== 
==1923== 
==1923== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1923==  Access not within mapped region at address 0x0
==1923==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1923==    by 0x4041F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1923==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1923==  If you believe this happened as a result of a stack
==1923==  overflow in your program's main thread (unlikely but
==1923==  possible), you can try to increase the size of the
==1923==  main thread stack using the --main-stacksize= flag.
==1923==  The main thread stack size used in this run was 8388608.
==1923== 
==1923== HEAP SUMMARY:
==1923==     in use at exit: 896 bytes in 57 blocks
==1923==   total heap usage: 58 allocs, 1 frees, 912 bytes allocated
==1923== 
==1923== LEAK SUMMARY:
==1923==    definitely lost: 0 bytes in 0 blocks
==1923==    indirectly lost: 0 bytes in 0 blocks
==1923==      possibly lost: 0 bytes in 0 blocks
==1923==    still reachable: 896 bytes in 57 blocks
==1923==         suppressed: 0 bytes in 0 blocks
==1923== Rerun with --leak-check=full to see details of leaked memory
==1923== 
==1923== For counts of detected and suppressed errors, rerun with: -v
==1923== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1927== Memcheck, a memory error detector
==1927== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1927== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1927== Command: ./tester aec
==1927== Parent PID: 1926
==1927== 
==1927== Invalid read of size 8
==1927==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x40216E: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1927==  Address 0x520b668 is 0 bytes after a block of size 24 alloc'd
==1927==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1927==    by 0x403DBC: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1927== 
==1927== Invalid write of size 4
==1927==    at 0x4020F5: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x40216E: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1927==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1927== 
==1927== 
==1927== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1927==  Access not within mapped region at address 0x0
==1927==    at 0x4020F5: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x40216E: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1927==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1927==  If you believe this happened as a result of a stack
==1927==  overflow in your program's main thread (unlikely but
==1927==  possible), you can try to increase the size of the
==1927==  main thread stack using the --main-stacksize= flag.
==1927==  The main thread stack size used in this run was 8388608.
==1927== 
==1927== HEAP SUMMARY:
==1927==     in use at exit: 6,984 bytes in 448 blocks
==1927==   total heap usage: 456 allocs, 8 frees, 7,088 bytes allocated
==1927== 
==1927== LEAK SUMMARY:
==1927==    definitely lost: 0 bytes in 0 blocks
==1927==    indirectly lost: 0 bytes in 0 blocks
==1927==      possibly lost: 0 bytes in 0 blocks
==1927==    still reachable: 6,984 bytes in 448 blocks
==1927==         suppressed: 0 bytes in 0 blocks
==1927== Rerun with --leak-check=full to see details of leaked memory
==1927== 
==1927== For counts of detected and suppressed errors, rerun with: -v
==1927== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1931== Memcheck, a memory error detector
==1931== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1931== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1931== Command: ./tester mde
==1931== Parent PID: 1930
==1931== 
==1931== Invalid read of size 8
==1931==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x4021E6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x4038DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1931==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1931== 
==1931== 
==1931== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1931==  Access not within mapped region at address 0x0
==1931==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x4021E6: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x4038DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1931==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1931==  If you believe this happened as a result of a stack
==1931==  overflow in your program's main thread (unlikely but
==1931==  possible), you can try to increase the size of the
==1931==  main thread stack using the --main-stacksize= flag.
==1931==  The main thread stack size used in this run was 8388608.
==1931== 
==1931== HEAP SUMMARY:
==1931==     in use at exit: 880 bytes in 56 blocks
==1931==   total heap usage: 57 allocs, 1 frees, 896 bytes allocated
==1931== 
==1931== LEAK SUMMARY:
==1931==    definitely lost: 0 bytes in 0 blocks
==1931==    indirectly lost: 0 bytes in 0 blocks
==1931==      possibly lost: 0 bytes in 0 blocks
==1931==    still reachable: 880 bytes in 56 blocks
==1931==         suppressed: 0 bytes in 0 blocks
==1931== Rerun with --leak-check=full to see details of leaked memory
==1931== 
==1931== For counts of detected and suppressed errors, rerun with: -v
==1931== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1935== Memcheck, a memory error detector
==1935== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1935== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1935== Command: ./tester brd
==1935== Parent PID: 1934
==1935== 
==1935== Invalid read of size 8
==1935==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x402276: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x40353C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1935==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1935== 
==1935== 
==1935== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1935==  Access not within mapped region at address 0x0
==1935==    at 0x4020EF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x402276: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x40353C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1935==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1935==  If you believe this happened as a result of a stack
==1935==  overflow in your program's main thread (unlikely but
==1935==  possible), you can try to increase the size of the
==1935==  main thread stack using the --main-stacksize= flag.
==1935==  The main thread stack size used in this run was 8388608.
==1935== 
==1935== HEAP SUMMARY:
==1935==     in use at exit: 96 bytes in 9 blocks
==1935==   total heap usage: 11 allocs, 2 frees, 4,208 bytes allocated
==1935== 
==1935== LEAK SUMMARY:
==1935==    definitely lost: 0 bytes in 0 blocks
==1935==    indirectly lost: 0 bytes in 0 blocks
==1935==      possibly lost: 0 bytes in 0 blocks
==1935==    still reachable: 96 bytes in 9 blocks
==1935==         suppressed: 0 bytes in 0 blocks
==1935== Rerun with --leak-check=full to see details of leaked memory
==1935== 
==1935== For counts of detected and suppressed errors, rerun with: -v
==1935== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
