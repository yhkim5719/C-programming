Grading at Mon Aug 12 04:51:02 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1622== Memcheck, a memory error detector
==1622== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1622== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1622== Command: ./tester act
==1622== Parent PID: 1621
==1622== 
==1622== Use of uninitialised value of size 8
==1622==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x4041F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1622== 
==1622== Invalid write of size 8
==1622==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x4041F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1622==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1622== 
==1622== 
==1622== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1622==  Access not within mapped region at address 0x0
==1622==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x4041F2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1622==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1622==  If you believe this happened as a result of a stack
==1622==  overflow in your program's main thread (unlikely but
==1622==  possible), you can try to increase the size of the
==1622==  main thread stack using the --main-stacksize= flag.
==1622==  The main thread stack size used in this run was 8388608.
==1622== 
==1622== HEAP SUMMARY:
==1622==     in use at exit: 904 bytes in 58 blocks
==1622==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1622== 
==1622== LEAK SUMMARY:
==1622==    definitely lost: 0 bytes in 0 blocks
==1622==    indirectly lost: 0 bytes in 0 blocks
==1622==      possibly lost: 0 bytes in 0 blocks
==1622==    still reachable: 904 bytes in 58 blocks
==1622==         suppressed: 0 bytes in 0 blocks
==1622== Rerun with --leak-check=full to see details of leaked memory
==1622== 
==1622== For counts of detected and suppressed errors, rerun with: -v
==1622== Use --track-origins=yes to see where uninitialised values come from
==1622== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1626== Memcheck, a memory error detector
==1626== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1626== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1626== Command: ./tester aec
==1626== Parent PID: 1625
==1626== 
==1626== Use of uninitialised value of size 8
==1626==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x40215B: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1626== 
==1626== Invalid write of size 8
==1626==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x40215B: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1626==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1626== 
==1626== 
==1626== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1626==  Access not within mapped region at address 0x0
==1626==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x40215B: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x403C1E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1626==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1626==  If you believe this happened as a result of a stack
==1626==  overflow in your program's main thread (unlikely but
==1626==  possible), you can try to increase the size of the
==1626==  main thread stack using the --main-stacksize= flag.
==1626==  The main thread stack size used in this run was 8388608.
==1626== 
==1626== HEAP SUMMARY:
==1626==     in use at exit: 6,944 bytes in 448 blocks
==1626==   total heap usage: 456 allocs, 8 frees, 7,056 bytes allocated
==1626== 
==1626== LEAK SUMMARY:
==1626==    definitely lost: 0 bytes in 0 blocks
==1626==    indirectly lost: 0 bytes in 0 blocks
==1626==      possibly lost: 0 bytes in 0 blocks
==1626==    still reachable: 6,944 bytes in 448 blocks
==1626==         suppressed: 0 bytes in 0 blocks
==1626== Rerun with --leak-check=full to see details of leaked memory
==1626== 
==1626== For counts of detected and suppressed errors, rerun with: -v
==1626== Use --track-origins=yes to see where uninitialised values come from
==1626== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1630== Memcheck, a memory error detector
==1630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1630== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1630== Command: ./tester mde
==1630== Parent PID: 1629
==1630== 
==1630== Use of uninitialised value of size 8
==1630==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4021D3: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4038DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1630== 
==1630== Invalid write of size 8
==1630==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4021D3: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4038DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1630==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1630== 
==1630== 
==1630== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1630==  Access not within mapped region at address 0x0
==1630==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4021D3: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x4038DC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1630==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1630==  If you believe this happened as a result of a stack
==1630==  overflow in your program's main thread (unlikely but
==1630==  possible), you can try to increase the size of the
==1630==  main thread stack using the --main-stacksize= flag.
==1630==  The main thread stack size used in this run was 8388608.
==1630== 
==1630== HEAP SUMMARY:
==1630==     in use at exit: 888 bytes in 57 blocks
==1630==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==1630== 
==1630== LEAK SUMMARY:
==1630==    definitely lost: 0 bytes in 0 blocks
==1630==    indirectly lost: 0 bytes in 0 blocks
==1630==      possibly lost: 0 bytes in 0 blocks
==1630==    still reachable: 888 bytes in 57 blocks
==1630==         suppressed: 0 bytes in 0 blocks
==1630== Rerun with --leak-check=full to see details of leaked memory
==1630== 
==1630== For counts of detected and suppressed errors, rerun with: -v
==1630== Use --track-origins=yes to see where uninitialised values come from
==1630== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1634== Memcheck, a memory error detector
==1634== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1634== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1634== Command: ./tester brd
==1634== Parent PID: 1633
==1634== 
==1634== Use of uninitialised value of size 8
==1634==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x402263: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x40353C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1634== 
==1634== Invalid write of size 8
==1634==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x402263: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x40353C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1634==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1634== 
==1634== 
==1634== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1634==  Access not within mapped region at address 0x0
==1634==    at 0x402100: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x402263: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x40353C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1634==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1634==  If you believe this happened as a result of a stack
==1634==  overflow in your program's main thread (unlikely but
==1634==  possible), you can try to increase the size of the
==1634==  main thread stack using the --main-stacksize= flag.
==1634==  The main thread stack size used in this run was 8388608.
==1634== 
==1634== HEAP SUMMARY:
==1634==     in use at exit: 104 bytes in 10 blocks
==1634==   total heap usage: 11 allocs, 1 frees, 4,200 bytes allocated
==1634== 
==1634== LEAK SUMMARY:
==1634==    definitely lost: 0 bytes in 0 blocks
==1634==    indirectly lost: 0 bytes in 0 blocks
==1634==      possibly lost: 0 bytes in 0 blocks
==1634==    still reachable: 104 bytes in 10 blocks
==1634==         suppressed: 0 bytes in 0 blocks
==1634== Rerun with --leak-check=full to see details of leaked memory
==1634== 
==1634== For counts of detected and suppressed errors, rerun with: -v
==1634== Use --track-origins=yes to see where uninitialised values come from
==1634== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
