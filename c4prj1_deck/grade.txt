Grading at Tue Jul 30 23:27:01 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1463== Memcheck, a memory error detector
==1463== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1463== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1463== Command: ./tester act
==1463== Parent PID: 1462
==1463== 
==1463== Invalid write of size 8
==1463==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x4041B2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463==  Address 0x52053a8 is 0 bytes after a block of size 8 alloc'd
==1463==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1463==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1463==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x4041B2: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463== 
==1463== Invalid write of size 8
==1463==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x404188: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463==  Address 0x5208dc8 is 0 bytes after a block of size 8 alloc'd
==1463==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1463==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1463==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x404188: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463== 
==1463== Use of uninitialised value of size 8
==1463==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x4041E9: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463== 
==1463== Invalid read of size 4
==1463==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x4041E9: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1463== 
==1463== 
==1463== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1463==  Access not within mapped region at address 0x0
==1463==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x4041E9: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1463==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1463==  If you believe this happened as a result of a stack
==1463==  overflow in your program's main thread (unlikely but
==1463==  possible), you can try to increase the size of the
==1463==  main thread stack using the --main-stacksize= flag.
==1463==  The main thread stack size used in this run was 8388608.
==1463== 
==1463== HEAP SUMMARY:
==1463==     in use at exit: 20,992 bytes in 958 blocks
==1463==   total heap usage: 1,864 allocs, 906 frees, 155,200 bytes allocated
==1463== 
==1463== LEAK SUMMARY:
==1463==    definitely lost: 0 bytes in 0 blocks
==1463==    indirectly lost: 0 bytes in 0 blocks
==1463==      possibly lost: 0 bytes in 0 blocks
==1463==    still reachable: 20,992 bytes in 958 blocks
==1463==         suppressed: 0 bytes in 0 blocks
==1463== Rerun with --leak-check=full to see details of leaked memory
==1463== 
==1463== For counts of detected and suppressed errors, rerun with: -v
==1463== Use --track-origins=yes to see where uninitialised values come from
==1463== ERROR SUMMARY: 834 errors from 4 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1467== Memcheck, a memory error detector
==1467== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1467== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1467== Command: ./tester aec
==1467== Parent PID: 1466
==1467== 
==1467== Invalid write of size 8
==1467==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x402167: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403BDE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467==  Address 0x520db00 is 0 bytes after a block of size 32 alloc'd
==1467==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1467==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x402167: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403BDE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467== 
==1467== Invalid write of size 8
==1467==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x402167: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403C33: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467==  Address 0x520df40 is 0 bytes after a block of size 400 alloc'd
==1467==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1467==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x402167: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403C33: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467== 
==1467== Use of uninitialised value of size 8
==1467==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403E1A: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467== 
==1467== Invalid read of size 4
==1467==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403E1A: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1467== 
==1467== 
==1467== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1467==  Access not within mapped region at address 0x0
==1467==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x403E1A: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1467==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1467==  If you believe this happened as a result of a stack
==1467==  overflow in your program's main thread (unlikely but
==1467==  possible), you can try to increase the size of the
==1467==  main thread stack using the --main-stacksize= flag.
==1467==  The main thread stack size used in this run was 8388608.
==1467== 
==1467== HEAP SUMMARY:
==1467==     in use at exit: 28,608 bytes in 1,850 blocks
==1467==   total heap usage: 2,120 allocs, 270 frees, 50,688 bytes allocated
==1467== 
==1467== LEAK SUMMARY:
==1467==    definitely lost: 240 bytes in 30 blocks
==1467==    indirectly lost: 0 bytes in 0 blocks
==1467==      possibly lost: 0 bytes in 0 blocks
==1467==    still reachable: 28,368 bytes in 1,820 blocks
==1467==         suppressed: 0 bytes in 0 blocks
==1467== Rerun with --leak-check=full to see details of leaked memory
==1467== 
==1467== For counts of detected and suppressed errors, rerun with: -v
==1467== Use --track-origins=yes to see where uninitialised values come from
==1467== ERROR SUMMARY: 32 errors from 4 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1471== Memcheck, a memory error detector
==1471== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1471== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1471== Command: ./tester mde
==1471== Parent PID: 1470
==1471== 
==1471== Conditional jump or move depends on uninitialised value(s)
==1471==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1471==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4021D4: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x40389C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471== 
==1471== Invalid write of size 8
==1471==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4021D4: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x40389C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471==  Address 0x5205358 is 0 bytes after a block of size 8 alloc'd
==1471==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1471==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1471==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4021D4: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x40389C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471== 
==1471== Use of uninitialised value of size 8
==1471==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4039A4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471== 
==1471== Invalid read of size 4
==1471==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4039A4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1471== 
==1471== 
==1471== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1471==  Access not within mapped region at address 0x0
==1471==    at 0x402B13: check_decks_same (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x4039A4: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1471==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1471==  If you believe this happened as a result of a stack
==1471==  overflow in your program's main thread (unlikely but
==1471==  possible), you can try to increase the size of the
==1471==  main thread stack using the --main-stacksize= flag.
==1471==  The main thread stack size used in this run was 8388608.
==1471== 
==1471== HEAP SUMMARY:
==1471==     in use at exit: 19,776 bytes in 927 blocks
==1471==   total heap usage: 1,728 allocs, 801 frees, 149,504 bytes allocated
==1471== 
==1471== LEAK SUMMARY:
==1471==    definitely lost: 0 bytes in 0 blocks
==1471==    indirectly lost: 0 bytes in 0 blocks
==1471==      possibly lost: 0 bytes in 0 blocks
==1471==    still reachable: 19,776 bytes in 927 blocks
==1471==         suppressed: 0 bytes in 0 blocks
==1471== Rerun with --leak-check=full to see details of leaked memory
==1471== 
==1471== For counts of detected and suppressed errors, rerun with: -v
==1471== Use --track-origins=yes to see where uninitialised values come from
==1471== ERROR SUMMARY: 730 errors from 4 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1475== Memcheck, a memory error detector
==1475== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1475== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1475== Command: ./tester brd
==1475== Parent PID: 1474
==1475== 
==1475== Conditional jump or move depends on uninitialised value(s)
==1475==    at 0x4C2FD0C: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1475==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x40224D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Conditional jump or move depends on uninitialised value(s)
==1475==    at 0x4C2DB3C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1475==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1475==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x40224D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Use of uninitialised value of size 8
==1475==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x40224D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Invalid write of size 8
==1475==    at 0x402120: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x40224D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475==  Address 0x5205358 is 0 bytes after a block of size 8 alloc'd
==1475==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1475==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1475==    by 0x4020FB: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x40224D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Conditional jump or move depends on uninitialised value(s)
==1475==    at 0x401EE0: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4021BD: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x402291: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Conditional jump or move depends on uninitialised value(s)
==1475==    at 0x401F48: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4021BD: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x402291: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Use of uninitialised value of size 8
==1475==    at 0x401F02: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4021BD: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x402291: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475== 
==1475== Invalid read of size 4
==1475==    at 0x401F02: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4021BD: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x402291: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1475== 
==1475== 
==1475== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1475==  Access not within mapped region at address 0x0
==1475==    at 0x401F02: deck_contains (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4021BD: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x402291: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x4034FC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1475==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1475==  If you believe this happened as a result of a stack
==1475==  overflow in your program's main thread (unlikely but
==1475==  possible), you can try to increase the size of the
==1475==  main thread stack using the --main-stacksize= flag.
==1475==  The main thread stack size used in this run was 8388608.
==1475== 
==1475== HEAP SUMMARY:
==1475==     in use at exit: 120 bytes in 11 blocks
==1475==   total heap usage: 12 allocs, 1 frees, 4,216 bytes allocated
==1475== 
==1475== LEAK SUMMARY:
==1475==    definitely lost: 0 bytes in 0 blocks
==1475==    indirectly lost: 0 bytes in 0 blocks
==1475==      possibly lost: 0 bytes in 0 blocks
==1475==    still reachable: 120 bytes in 11 blocks
==1475==         suppressed: 0 bytes in 0 blocks
==1475== Rerun with --leak-check=full to see details of leaked memory
==1475== 
==1475== For counts of detected and suppressed errors, rerun with: -v
==1475== Use --track-origins=yes to see where uninitialised values come from
==1475== ERROR SUMMARY: 8 errors from 8 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
