Grading at Mon Aug 12 04:52:54 UTC 2019
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1759== Memcheck, a memory error detector
==1759== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1759== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1759== Command: ./tester act
==1759== Parent PID: 1758
==1759== 
==1759== Use of uninitialised value of size 8
==1759==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x404202: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1759== 
==1759== Invalid write of size 4
==1759==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x404202: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1759==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1759== 
==1759== 
==1759== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1759==  Access not within mapped region at address 0x0
==1759==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x404202: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1759==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1759==  If you believe this happened as a result of a stack
==1759==  overflow in your program's main thread (unlikely but
==1759==  possible), you can try to increase the size of the
==1759==  main thread stack using the --main-stacksize= flag.
==1759==  The main thread stack size used in this run was 8388608.
==1759== 
==1759== HEAP SUMMARY:
==1759==     in use at exit: 904 bytes in 58 blocks
==1759==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1759== 
==1759== LEAK SUMMARY:
==1759==    definitely lost: 0 bytes in 0 blocks
==1759==    indirectly lost: 0 bytes in 0 blocks
==1759==      possibly lost: 0 bytes in 0 blocks
==1759==    still reachable: 904 bytes in 58 blocks
==1759==         suppressed: 0 bytes in 0 blocks
==1759== Rerun with --leak-check=full to see details of leaked memory
==1759== 
==1759== For counts of detected and suppressed errors, rerun with: -v
==1759== Use --track-origins=yes to see where uninitialised values come from
==1759== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1763== Memcheck, a memory error detector
==1763== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1763== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1763== Command: ./tester aec
==1763== Parent PID: 1762
==1763== 
==1763== Use of uninitialised value of size 8
==1763==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x402178: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x403C2E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1763== 
==1763== Invalid write of size 4
==1763==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x402178: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x403C2E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1763==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1763== 
==1763== 
==1763== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1763==  Access not within mapped region at address 0x0
==1763==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x402178: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x403C2E: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1763==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1763==  If you believe this happened as a result of a stack
==1763==  overflow in your program's main thread (unlikely but
==1763==  possible), you can try to increase the size of the
==1763==  main thread stack using the --main-stacksize= flag.
==1763==  The main thread stack size used in this run was 8388608.
==1763== 
==1763== HEAP SUMMARY:
==1763==     in use at exit: 6,944 bytes in 448 blocks
==1763==   total heap usage: 456 allocs, 8 frees, 7,056 bytes allocated
==1763== 
==1763== LEAK SUMMARY:
==1763==    definitely lost: 0 bytes in 0 blocks
==1763==    indirectly lost: 0 bytes in 0 blocks
==1763==      possibly lost: 0 bytes in 0 blocks
==1763==    still reachable: 6,944 bytes in 448 blocks
==1763==         suppressed: 0 bytes in 0 blocks
==1763== Rerun with --leak-check=full to see details of leaked memory
==1763== 
==1763== For counts of detected and suppressed errors, rerun with: -v
==1763== Use --track-origins=yes to see where uninitialised values come from
==1763== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1767== Memcheck, a memory error detector
==1767== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1767== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1767== Command: ./tester mde
==1767== Parent PID: 1766
==1767== 
==1767== Use of uninitialised value of size 8
==1767==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4021F0: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4038EC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1767== 
==1767== Invalid write of size 4
==1767==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4021F0: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4038EC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1767==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1767== 
==1767== 
==1767== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1767==  Access not within mapped region at address 0x0
==1767==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4021F0: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x4038EC: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1767==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1767==  If you believe this happened as a result of a stack
==1767==  overflow in your program's main thread (unlikely but
==1767==  possible), you can try to increase the size of the
==1767==  main thread stack using the --main-stacksize= flag.
==1767==  The main thread stack size used in this run was 8388608.
==1767== 
==1767== HEAP SUMMARY:
==1767==     in use at exit: 888 bytes in 57 blocks
==1767==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==1767== 
==1767== LEAK SUMMARY:
==1767==    definitely lost: 0 bytes in 0 blocks
==1767==    indirectly lost: 0 bytes in 0 blocks
==1767==      possibly lost: 0 bytes in 0 blocks
==1767==    still reachable: 888 bytes in 57 blocks
==1767==         suppressed: 0 bytes in 0 blocks
==1767== Rerun with --leak-check=full to see details of leaked memory
==1767== 
==1767== For counts of detected and suppressed errors, rerun with: -v
==1767== Use --track-origins=yes to see where uninitialised values come from
==1767== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1771== Memcheck, a memory error detector
==1771== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1771== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1771== Command: ./tester brd
==1771== Parent PID: 1770
==1771== 
==1771== Use of uninitialised value of size 8
==1771==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x402280: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x40354C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1771== 
==1771== Invalid write of size 4
==1771==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x402280: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x40354C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1771==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1771== 
==1771== 
==1771== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1771==  Access not within mapped region at address 0x0
==1771==    at 0x4020FF: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x402280: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x40354C: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1771==    by 0x400AB8: main (in /graderhome/work/c4prj1_deck/tester)
==1771==  If you believe this happened as a result of a stack
==1771==  overflow in your program's main thread (unlikely but
==1771==  possible), you can try to increase the size of the
==1771==  main thread stack using the --main-stacksize= flag.
==1771==  The main thread stack size used in this run was 8388608.
==1771== 
==1771== HEAP SUMMARY:
==1771==     in use at exit: 104 bytes in 10 blocks
==1771==   total heap usage: 11 allocs, 1 frees, 4,200 bytes allocated
==1771== 
==1771== LEAK SUMMARY:
==1771==    definitely lost: 0 bytes in 0 blocks
==1771==    indirectly lost: 0 bytes in 0 blocks
==1771==      possibly lost: 0 bytes in 0 blocks
==1771==    still reachable: 104 bytes in 10 blocks
==1771==         suppressed: 0 bytes in 0 blocks
==1771== Rerun with --leak-check=full to see details of leaked memory
==1771== 
==1771== For counts of detected and suppressed errors, rerun with: -v
==1771== Use --track-origins=yes to see where uninitialised values come from
==1771== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
